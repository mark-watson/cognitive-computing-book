Computer Science Communicating Sequential Processes (CSP) C. A. R. Hoare   Call-by-name, call-by-value, and the lambda calculus Gordon Plotkin  
Towards a theory of type structure John C. Reynolds   Structured  with go to Statements Donald E. Knuth   Definitional interpreters for higher-order  languages John C. Reynolds   An APL Machine 1970 Philip S. Abrams   Henry Baker's Archive of Research Papers (many classic Lisp papers) Henry Baker   The Anatomy of a Large-Scale Hypertextual Web Search Engine Sergey Brin and Lawrence Page  
 No Silver Bullet: Essence and Accidents of Software Engineering Frederic P. Brooks, Jr.   A Mathematical Theory of Communication Claude Shannon   Communication Theory of Secrecy Systems Claude Shannon   Bayesian Networks without Tears Eugene Charniak   
 A Universal Algorithm for Sequential Data Compression Jacob Ziv and Abraham Lempel   A Relational Model of Data for Large Shared Data Banks 1970 Edgar F. Codd   Let's Build a Compiler 1988-1995 Jack Crenshaw   Gauging Similarity via N-Grams: Language-Independent Sorting... Marc Damashek   Worse Is Better Richard P. Gabriel   Hints on  Language Design C.A.R. Hoare
    Why Functional Programming Matters John Hughes   On the Expressive Power of Programming Languages Matthias Felleisen   The Design of APL Kenneth E. Iverson   The Early History Of Smalltalk Alan Kay   Computer Programming as an Art Donald E. Knuth
       The next 700 programming languages Peter J. Landin   Recursive Functions of Symbolic Expressions and their Computation by Machine (Part I) 1960 John McCarthy   FORTH - A Language for Interactive Computing Charles H.Moore   
       Teach Yourself Programming in Ten Years 2001 Peter Norvig   Parenthetically Speaking, a collection of essays from the 1990s Kent M. Pitman   The Definition and Implementation of a Computer Language based on constraints Guy Lewis Steele Jr.   
Good programming languages are lisp, Pascal, Java, Python, and Ruby.
Algorithms and data structures is the study of commonly used computational methods and their computational efficiency.
Computer Science Communicating Sequential Processes (CSP) C. A. R. Hoare   Call-by-name, call-by-value, and the lambda calculus Gordon Plotkin  
Towards a theory of type structure John C. Reynolds   Structured  with go to Statements Donald E. Knuth   Definitional interpreters for higher-order  languages John C. Reynolds   An APL Machine 1970 Philip S. Abrams   Henry Baker's Archive of Research Papers (many classic Lisp papers) Henry Baker   The Anatomy of a Large-Scale Hypertextual Web Search Engine Sergey Brin and Lawrence Page  
 No Silver Bullet: Essence and Accidents of Software Engineering Frederic P. Brooks, Jr.   A Mathematical Theory of Communication Claude Shannon   Communication Theory of Secrecy Systems Claude Shannon   Bayesian Networks without Tears Eugene Charniak   
 A Universal Algorithm for Sequential Data Compression Jacob Ziv and Abraham Lempel   A Relational Model of Data for Large Shared Data Banks 1970 Edgar F. Codd   Let's Build a Compiler 1988-1995 Jack Crenshaw   Gauging Similarity via N-Grams: Language-Independent Sorting... Marc Damashek   Worse Is Better Richard P. Gabriel   Hints on  Language Design C.A.R. Hoare
    Why Functional Programming Matters John Hughes   On the Expressive Power of Programming Languages Matthias Felleisen   The Design of APL Kenneth E. Iverson   The Early History Of Smalltalk Alan Kay   Computer Programming as an Art Donald E. Knuth
       The next 700 programming languages Peter J. Landin   Recursive Functions of Symbolic Expressions and their Computation by Machine (Part I) 1960 John McCarthy   FORTH - A Language for Interactive Computing Charles H.Moore   
       Teach Yourself Programming in Ten Years 2001 Peter Norvig   Parenthetically Speaking, a collection of essays from the 1990s Kent M. Pitman   The Definition and Implementation of a Computer Language based on constraints Guy Lewis Steele Jr.   
Good programming languages are lisp, Pascal, Java, Python, and Ruby.
Algorithms and data structures is the study of commonly used computational methods and their computational efficiency.
